@model SSMWebApplication.Models.EmployeeRegister

@{
    ViewBag.Title = "WriteToXml";
}

@using (Html.BeginForm("WriteToXml", "RegisterEmployeeController", FormMethod.Post, new { encType = "multipart/form-data", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Register Employee</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            Male :  @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control" } })
            Female :   @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Qualification, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            BA :   @Html.CheckBox("Qualification", "BA")
            MA :   @Html.CheckBox("Qualification", "MA")
            BBA :  @Html.CheckBox("Qualification", "BBA")
            MBA :  @Html.CheckBox("Qualification", "MBA")
            BCA :  @Html.CheckBox("Qualification", "BCA")
            MCA :  @Html.CheckBox("Qualification", "MCA")
            BCS :  @Html.CheckBox("Qualification", "BSC")
            MSC :  @Html.CheckBox("Qualification", "MSC")
            @Html.ValidationMessageFor(model => model.Qualification, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.State, ViewBag.State as SelectList, "--Select state--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.City, new SelectList(""), "--Select City--", htmlAttributes: new { @class = "form-control form-control-lg" })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProfilePic, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="col-sm-10">
                <img src="" class="border" style="display:block" height="200" width="200" id="image">
            </div>
            <br />

            <input type="file" name="ProfilePhoto" id="ProfilePhoto" />
            @Html.ValidationMessageFor(model => model.ProfilePic, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Sign Up" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        $('#State').change(function () {
            $('#City option:not(:first)').remove();
            $.getJSON("/RegisterEmployeeController/GetCitiesList/", { stateId: $(this).val() },
                function (data) {
                    if (!data) {
                        return;
                    }
                    $.each(data, function (index, item) {
                        $("#City").append($('<option></option>').val(item.Value).text(item.Text));
                    });
                });
        })


        $("#ProfilePhoto").change(function () {

            var imagefilepath = $(this).val();
            if (this.files && this.files[0]) {
                var obj = new FileReader();
                obj.onload = function (data) {
                    var image = document.getElementById("image");

                    image.src = data.target.result;
                    image.style.display = "block";

                }
                obj.readAsDataURL(this.files[0]);
            }
        })

    });
</script>

}
